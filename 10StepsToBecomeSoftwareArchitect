Agenda: (Max 20 mins, aim 15-17), About 1:10 minutes per step
- Introduction, Bio (:30 - 1:00)
- Steps

Reference from: https://hackernoon.com/38-actions-and-insights-to-become-a-better-software-architect-f135e2de9a1b
1. Whats a software architect? What she/he does?
2. Design Skills, Design Patterns
3. Code, Try out new technologies, POC?
4. Know how to document
5. Design Diagrams, Communicate
6. How to speak? Public Speaking
7. Coach, share experiences, what about a conference?
8. Decision making
9.
10. 

https://medium.com/@nvashanin/the-path-to-becoming-a-software-architect-de53f1cb310a
1. communication
2. Deep technical knowledge
3. Problem solving skills
4. REading a lot
5. find a mentor
6. study courses, get certified
7.
8.
9.
10.

https://dzone.com/articles/quick-introduction-to-software-architecture?edition=479225&utm_source=Weekly%20Digest&utm_medium=email&utm_campaign=Weekly%20Digest%202019-05-01
1. Learn to make decisions

https://www.udemy.com/course/the-complete-guide-to-becoming-a-software-architect/?utm_source=adwords&utm_medium=udemyads&utm_campaign=LongTail_la.EN_cc.ROWMTA-B&utm_content=deal4584&utm_term=_._ag_81029237754_._ad_382271364865_._kw__._de_c_._dm__._pl__._ti_dsa-1007766171032_._li_9063510_._pd__._&matchtype=b&gclid=Cj0KCQiAw4jvBRCJARIsAHYewPOQfR5807PFmugsG883egqxZDOQgUyMTAZyxMNa5Eo_-Pvlbof_-h0aAkfrEALw_wcB
1. what's software architecture
2. Mindset, changing the way to think to approach problems to deal with customers
3. learn the process, how to do it
4. non functional requirements
5. deep tech-stack knowledge
6. Software qualities
7. Design patterns
8. How to document
9. Architectural patterns, solutions for modern applications
10. Soft skills

Other References:
- Analytical skills. Developers must analyze usersâ€™ needs and then design software to meet those needs.
- Communication skills. Developers must be able to give clear instructions to others working on a project. They must also explain to their customers how the software works and answer any questions that arise.
- Computer skills. Developers must understand computer capabilities and programming languages in order to design effective software.
- Creativity. Developers are the creative minds behind new computer software.
- Detail oriented. Developers often work on many parts of an application or system at the same time and must therefore be able to concentrate and pay attention to detail.
- Interpersonal skills. Software developers must be able to work well with others who contribute to designing, developing, and programming successful software.
- Problem-solving skills. Because developers are in charge of software from beginning to end, they must be able to solve problems that arise throughout the design process.

https://www.tripleco.com/2018/03/15/become-software-architect/
1. Sharpen your communication (and charisma, too)
2. Upgrade your tech knowledge
3. Surround yourself with better
4. Get a mentor, be a mentor
5. Be ready to step up


